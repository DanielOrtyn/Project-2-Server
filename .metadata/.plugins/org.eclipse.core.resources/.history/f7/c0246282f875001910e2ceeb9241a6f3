package com.revature.controllers;

import java.util.List;
import java.util.Optional;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.revature.model.Bid;
import com.revature.model.SaleItem;
import com.revature.model.User;
import com.revature.service.BidService;

@RestController
@RequestMapping("bid")
public class BidController {
	@Autowired
	private BidService bidService;

	@GetMapping()
	public List<Bid> findAll() {
		return bidService.findAll();
	}

	@GetMapping("{id}")
	public ResponseEntity<Bid> findById(@PathVariable int id, HttpServletRequest req) {
		Optional<Bid> foundBid = bidService.findById(id);
		
		User currentUser = (User) req.getSession().getAttribute("user");
		if (foundBid != null && (currentUser == null || (currentUser.getUserId() == foundBid))) {
			return new ResponseEntity<Bid>(HttpStatus.FORBIDDEN);
		}
		return new ResponseEntity<Optional<Bid>>(foundBid, HttpStatus.OK);
	}

	@PostMapping()
	public Bid save(@RequestBody Bid b) {
		return bidService.save(b);
	}

	@PostMapping("findByBidder")
	public List<Bid> findByBidderId(@RequestBody User bidder) {

		return bidService.findByBidder(bidder);
	}
}
